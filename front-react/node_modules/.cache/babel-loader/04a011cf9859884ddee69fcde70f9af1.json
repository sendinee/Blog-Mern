{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoema\\\\blog\\\\front-react\\\\src\\\\screens\\\\Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { onConnect } from '../store/actions/userActions';\nimport { login } from '../services/api_services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require(\"crypto\");\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  encodedPassword() {\n    return crypto.createHash(\"sha512\").update(this.state.password.trim()).digest(\"base64\");\n  }\n\n  connect(e) {\n    e.preventDefault();\n    let postData = {\n      email: this.state.email,\n      password: this.encodedPassword()\n    };\n    login(postData).then(result => {\n      this.props.onConnect(result.response);\n      window.location = \"/admin\";\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        flexDirection: \"column\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignSelf: \"center\",\n          margin: \"60px 0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: this.state.email,\n          placeholder: \"email\",\n          onChange: this.onChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          placeholder: \"password\",\n          onChange: this.onChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.connect.bind(this),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onConnect: data => {\n      dispatch(onConnect(data.user, data.token));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/zoema/blog/front-react/src/screens/Login.js"],"names":["React","connect","onConnect","login","crypto","require","Login","Component","constructor","props","state","email","password","onChange","e","setState","target","name","value","encodedPassword","createHash","update","trim","digest","preventDefault","postData","then","result","response","window","location","render","flexDirection","display","alignSelf","margin","bind","mapDispatchToProps","dispatch","data","user","token"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { onConnect } from '../store/actions/userActions';\nimport { login } from '../services/api_services';\n\nconst crypto = require(\"crypto\");\n\nclass Login extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.state={email:\"\", password:\"\"}\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    encodedPassword(){\n        return crypto.createHash(\"sha512\").update(this.state.password.trim()).digest(\"base64\");\n    }\n\n    connect(e){\n        e.preventDefault();\n        let postData= {email: this.state.email, password: this.encodedPassword()};\n        login(postData).then(result=>{\n            this.props.onConnect(result.response);\n            window.location= \"/admin\";\n        });\n    }\n\n    render() {\n      return (\n        <div className=\"row\" style={{flexDirection:\"column\"}}>\n           <form style={{display:\"flex\", flexDirection:\"column\",\n                        alignSelf:\"center\", margin:\"60px 0px\"}}>\n                <input type=\"email\" \n                      name=\"email\" \n                      value={this.state.email}\n                      placeholder=\"email\" \n                      onChange={this.onChange.bind(this)}/>\n                <input type=\"password\" \n                      name=\"password\" \n                      value={this.state.password}\n                      placeholder=\"password\" \n                      onChange={this.onChange.bind(this)}/>\n                <button onClick={this.connect.bind(this)}>\n                    Login\n                </button>\n           </form>\n        </div>\n      );\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onConnect: data => {dispatch(onConnect(data.user, data.token));}\n    };\n};\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}