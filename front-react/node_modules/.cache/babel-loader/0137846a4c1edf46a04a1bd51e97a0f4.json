{"ast":null,"code":"import { userActionTypes } from \"../constants/usersAction.types\";\nconst initialState = {\n  isLoggedIn: false,\n  isLoginError: false,\n  loginError: \"\"\n};\n\nconst loginReducer = (state = initialState, action) => {\n  console.log(\"received action\", action);\n\n  switch (action.type) {\n    case userActionTypes.LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: action.payload.isLoggedIn\n      };\n\n    case userActionTypes.LOGIN_FAILURE:\n      return { ...state,\n        loginError: action.payload.loginError\n      };\n\n    case userActionTypes.LOGOUT:\n      return { ...state,\n        isLoggedIn: action.payload.isLoggedIn\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["C:/Users/zoema/react_blog/src/redux/reducers/login.reducer.js"],"names":["userActionTypes","initialState","isLoggedIn","isLoginError","loginError","loginReducer","state","action","console","log","type","LOGIN_SUCCESS","payload","LOGIN_FAILURE","LOGOUT"],"mappings":"AAAA,SAASA,eAAT,QAAgC,gCAAhC;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE,KAAd;AAAqBC,EAAAA,YAAY,EAAE,KAAnC;AAA0CC,EAAAA,UAAU,EAAE;AAAtD,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,MAA/B;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKV,eAAe,CAACW,aAArB;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAFtB,OAAP;;AAKF,SAAKF,eAAe,CAACa,aAArB;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACK,OAAP,CAAeR;AAFtB,OAAP;;AAKF,SAAKJ,eAAe,CAACc,MAArB;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYJ,QAAAA,UAAU,EAAEK,MAAM,CAACK,OAAP,CAAeV;AAAvC,OAAP;;AACF;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;AAhBJ;AAkBD,CApBD;;AAsBA,eAAeD,YAAf","sourcesContent":["import { userActionTypes } from \"../constants/usersAction.types\";\n\nconst initialState = { isLoggedIn: false, isLoginError: false, loginError: \"\" };\n\nconst loginReducer = (state = initialState, action) => {\n  console.log(\"received action\", action);\n  switch (action.type) {\n    case userActionTypes.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: action.payload.isLoggedIn,\n      };\n\n    case userActionTypes.LOGIN_FAILURE:\n      return {\n        ...state,\n        loginError: action.payload.loginError,\n      };\n\n    case userActionTypes.LOGOUT:\n      return { ...state, isLoggedIn: action.payload.isLoggedIn };\n    default:\n      return { ...state };\n  }\n};\n\nexport default loginReducer;\n"]},"metadata":{},"sourceType":"module"}