{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoema\\\\blog\\\\front-react\\\\src\\\\components\\\\CategoryPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { getRessource } from '../services/api_services';\nimport { useParams } from \"react-router-dom\";\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet parse = require('html-react-parser');\n\nexport default class CategoryPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCategory: null,\n      posts: []\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextStates) {\n    if (nextProps.id && nextProps.id !== this.props.id) {\n      this.refresh(nextProps.id);\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    this.refresh(this.props.id);\n  }\n\n  refresh(id) {\n    getRessource(\"category\", id).then(result => {\n      if (result._doc) {\n        this.setState({\n          selectedCategory: result._doc,\n          posts: result.posts.sort((a, b) => b.created > a.created)\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        flexDirection: \"column\"\n      },\n      children: [this.state.selectedCategory ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.selectedCategory.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.selectedCategory.image ? this.state.selectedCategory.image : \"/logo192.png\",\n          className: \"imagePost\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), parse(this.state.selectedCategory.description)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bad id : Category not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), this.state.posts.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          data: item,\n          shorText: true,\n          displayText: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction Page() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Page, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/zoema/blog/front-react/src/components/CategoryPage.js"],"names":["React","getRessource","useParams","Post","parse","require","CategoryPage","Component","constructor","props","state","selectedCategory","posts","shouldComponentUpdate","nextProps","nextStates","id","refresh","componentDidMount","then","result","_doc","setState","sort","a","b","created","render","flexDirection","title","image","description","map","item","index","Page"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getRessource } from '../services/api_services';\nimport { useParams } from \"react-router-dom\";\nimport Post from './Post';\n\nlet parse = require('html-react-parser');\n\nexport default class CategoryPage extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.state={selectedCategory:null, posts:[]}\n    }\n\n    shouldComponentUpdate(nextProps, nextStates){\n        if(nextProps.id && nextProps.id!==this.props.id){\n            this.refresh(nextProps.id);\n        }\n        return true;\n    }\n\n    componentDidMount(){\n        this.refresh(this.props.id);\n    }\n\n    refresh(id){\n        getRessource(\"category\", id).then(result=>{\n            if(result._doc){\n                this.setState({selectedCategory:result._doc, posts: result.posts.sort((a,b)=>b.created>a.created)});\n            }\n        });\n    }\n\n    render() {\n      return (\n        <div className=\"row\" style={{flexDirection:\"column\"}}>\n            {this.state.selectedCategory?\n                <div style={{flexDirection:\"column\"}}>\n                    <h2>{this.state.selectedCategory.title}</h2>\n                    <img src={this.state.selectedCategory.image ? this.state.selectedCategory.image : \"/logo192.png\" } \n                        className={\"imagePost\"} alt=\"Logo\" />\n                    {parse(this.state.selectedCategory.description)}  \n                </div>\n                : <div style={{flexDirection:\"column\"}}>\n                    <h2>Bad id : Category not found</h2> \n                </div>\n            }\n            {this.state.posts.map((item,index)=>{\n                return <Post key={index}\n                                data={item}\n                                shorText={true} \n                                displayText={true} />\n            })}\n        </div>\n      );\n    }\n}\n\nfunction Page(){\n    let { id } = useParams();\n    return (\n      <div>\n        <h3>ID: {id}</h3>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}