{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoema\\\\blog\\\\front-react\\\\src\\\\pages\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Cookies from \"js-cookie\"; // component\n\nimport Navbar from \"../component/Navbar\"; // store\n\nimport store from \"../store/configureStore\";\nimport { userActionTypes } from \"../store/constants/usersAction.types\";\nimport usersActionsCreator from \"../store/actions/usersActions.creator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.setEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.setPassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.login = event => {\n      event.preventDefault();\n\n      if (this.state.email === \"\" && this.state.password === \"\") {\n        this.setState({\n          loginError: \"email and password field empty\"\n        });\n        return;\n      }\n\n      if (this.state.email === \"\") {\n        this.setState({\n          loginError: \"email field empty\"\n        });\n        return;\n      }\n\n      if (this.state.password === \"\") {\n        this.setState({\n          loginError: \"password field empty\"\n        });\n        return;\n      }\n\n      var formObject = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      store.dispatch(usersActionsCreator(userActionTypes.LOGIN_SUCCESS, {\n        formObject: JSON.stringify(formObject)\n      }));\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  //Cookies\n  render() {\n    if (Cookies.get(\"isLoggedIn\") === \"true\") {\n      this.props.history.push(\"/\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"form-title\",\n          children: \"User Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: this.props.loginError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          method: \"\",\n          name: \"login\",\n          encType: \"application/x-www-form-urlencoded\",\n          onSubmit: this.login,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            onChange: this.setEmail,\n            value: this.state.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            onChange: this.setPassword,\n            value: this.state.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"loginbtn\",\n            value: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/signup\",\n              children: \"SignUp Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    isLoggedIn: state.loginReducer.isLoggedIn,\n    loginError: state.loginReducer.loginError\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["C:/Users/zoema/blog/front-react/src/pages/Login.js"],"names":["React","Component","connect","Cookies","Navbar","store","userActionTypes","usersActionsCreator","Login","constructor","setEmail","event","setState","email","target","value","setPassword","password","login","preventDefault","state","loginError","formObject","dispatch","LOGIN_SUCCESS","JSON","stringify","render","get","props","history","push","mapStateToProps","isLoggedIn","loginReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n// component\r\nimport Navbar from \"../component/Navbar\";\r\n\r\n// store\r\nimport store from \"../store/configureStore\";\r\nimport { userActionTypes } from \"../store/constants/usersAction.types\";\r\nimport usersActionsCreator from \"../store/actions/usersActions.creator\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  setEmail = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  setPassword = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  login = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.email === \"\" && this.state.password === \"\") {\r\n      this.setState({ loginError: \"email and password field empty\" });\r\n      return;\r\n    }\r\n    if (this.state.email === \"\") {\r\n      this.setState({ loginError: \"email field empty\" });\r\n      return;\r\n    }\r\n\r\n    if (this.state.password === \"\") {\r\n      this.setState({ loginError: \"password field empty\" });\r\n      return;\r\n    }\r\n\r\n    var formObject = { email: this.state.email, password: this.state.password };\r\n\r\n    store.dispatch(\r\n      usersActionsCreator(userActionTypes.LOGIN_SUCCESS, {\r\n        formObject: JSON.stringify(formObject),\r\n      })\r\n    );\r\n  };\r\n//Cookies\r\n  render() {\r\n    if (Cookies.get(\"isLoggedIn\") === \"true\") {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    return (\r\n      <> \r\n        <Navbar />  \r\n      \r\n        <div className=\"form-container\">\r\n          <h1 className=\"form-title\">User Login Form</h1> \r\n          <p className=\"error\">{this.props.loginError}</p>\r\n          <form\r\n            action=\"\"\r\n            method=\"\"\r\n            name=\"login\"\r\n            encType=\"application/x-www-form-urlencoded\"\r\n            onSubmit={this.login}\r\n          >\r\n            <label htmlFor=\"email\">Email </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={this.setEmail}\r\n              value={this.state.email}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"password\">Password </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={this.setPassword}\r\n              value={this.state.password}\r\n            />\r\n            <br />\r\n            <input type=\"submit\" className=\"loginbtn\" value=\"Login\" />\r\n            <hr />\r\n            <p>\r\n              don't have an account?\r\n              <a href=\"/signup\">SignUp Here</a>.\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    isLoggedIn: state.loginReducer.isLoggedIn,\r\n    loginError: state.loginReducer.loginError,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}