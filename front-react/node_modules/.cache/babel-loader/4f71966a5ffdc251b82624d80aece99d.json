{"ast":null,"code":"import axios from 'axios';\nimport { retrieveData, TOKENID } from './localStorage';\nconst BASE_URL = 'http://localhost:3030';\nexport { BASE_URL, login, getRessources, getRessource, updateRessource, createRessource, deleteRessource };\n\nfunction login(data) {\n  const url = `${BASE_URL}/login`;\n  return axios.post(url, data).then(response => response.data);\n}\n\nfunction getRessources(name) {\n  const url = `${BASE_URL}/${name}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction getRessource(name, id) {\n  const url = `${BASE_URL}/${name}/${id}`;\n  return axios.get(url).then(response => response.data);\n}\n\nfunction updateRessource(name, id, data) {\n  const url = `${BASE_URL}/${name}/${id}`;\n  let token = retrieveData(TOKENID);\n  return axios.put(url, data, {\n    headers: {\n      Authorization: `${token}`\n    }\n  }).then(response => response.data);\n}\n\nfunction createRessource(name, data) {\n  const url = `${BASE_URL}/${name}`;\n  let token = retrieveData(TOKENID);\n  return axios.post(url, data, {\n    headers: {\n      Authorization: `${token}`\n    }\n  }).then(response => response.data);\n}\n\nfunction deleteRessource(name, id) {\n  const url = `${BASE_URL}/${name}/${id}`;\n  let token = retrieveData(TOKENID);\n  return axios.delete(url, {\n    headers: {\n      Authorization: `${token}`\n    }\n  }).then(response => response.data);\n}","map":{"version":3,"sources":["C:/Users/zoema/blog/front-react/src/services/api_services.js"],"names":["axios","retrieveData","TOKENID","BASE_URL","login","getRessources","getRessource","updateRessource","createRessource","deleteRessource","data","url","post","then","response","name","get","id","token","put","headers","Authorization","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,gBAAtC;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,SAAQA,QAAR,EAAkBC,KAAlB,EAAyBC,aAAzB,EAAwCC,YAAxC,EAAsDC,eAAtD,EAAuEC,eAAvE,EAAwFC,eAAxF;;AAEA,SAASL,KAAT,CAAeM,IAAf,EAAqB;AACnB,QAAMC,GAAG,GAAI,GAAER,QAAS,QAAxB;AACA,SAAOH,KAAK,CAACY,IAAN,CAAWD,GAAX,EAAgBD,IAAhB,EAAsBG,IAAtB,CAA4BC,QAAD,IAAcA,QAAQ,CAACJ,IAAlD,CAAP;AACD;;AAED,SAASL,aAAT,CAAuBU,IAAvB,EAA6B;AAC3B,QAAMJ,GAAG,GAAI,GAAER,QAAS,IAAGY,IAAK,EAAhC;AACA,SAAOf,KAAK,CAACgB,GAAN,CAAUL,GAAV,EAAeE,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACJ,IAA3C,CAAP;AACD;;AACD,SAASJ,YAAT,CAAsBS,IAAtB,EAA4BE,EAA5B,EAAgC;AAC9B,QAAMN,GAAG,GAAI,GAAER,QAAS,IAAGY,IAAK,IAAGE,EAAG,EAAtC;AACA,SAAOjB,KAAK,CAACgB,GAAN,CAAUL,GAAV,EAAeE,IAAf,CAAqBC,QAAD,IAAcA,QAAQ,CAACJ,IAA3C,CAAP;AACD;;AACD,SAASH,eAAT,CAAyBQ,IAAzB,EAA+BE,EAA/B,EAAmCP,IAAnC,EAAyC;AACrC,QAAMC,GAAG,GAAI,GAAER,QAAS,IAAGY,IAAK,IAAGE,EAAG,EAAtC;AACA,MAAIC,KAAK,GAAEjB,YAAY,CAACC,OAAD,CAAvB;AACA,SAAOF,KAAK,CAACmB,GAAN,CAAUR,GAAV,EAAeD,IAAf,EAAqB;AAAEU,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,GAAEH,KAAM;AAA1B;AAAX,GAArB,EAAgEL,IAAhE,CAAsEC,QAAD,IAAcA,QAAQ,CAACJ,IAA5F,CAAP;AACH;;AACD,SAASF,eAAT,CAAyBO,IAAzB,EAA+BL,IAA/B,EAAqC;AACjC,QAAMC,GAAG,GAAI,GAAER,QAAS,IAAGY,IAAK,EAAhC;AACA,MAAIG,KAAK,GAAEjB,YAAY,CAACC,OAAD,CAAvB;AACA,SAAOF,KAAK,CAACY,IAAN,CAAWD,GAAX,EAAgBD,IAAhB,EAAsB;AAAEU,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,GAAEH,KAAM;AAA1B;AAAX,GAAtB,EAAiEL,IAAjE,CAAuEC,QAAD,IAAcA,QAAQ,CAACJ,IAA7F,CAAP;AACH;;AACD,SAASD,eAAT,CAAyBM,IAAzB,EAA+BE,EAA/B,EAAmC;AAC/B,QAAMN,GAAG,GAAI,GAAER,QAAS,IAAGY,IAAK,IAAGE,EAAG,EAAtC;AACA,MAAIC,KAAK,GAAEjB,YAAY,CAACC,OAAD,CAAvB;AACA,SAAOF,KAAK,CAACsB,MAAN,CAAaX,GAAb,EAAkB;AAAES,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,GAAEH,KAAM;AAA1B;AAAX,GAAlB,EAA6DL,IAA7D,CAAmEC,QAAD,IAAcA,QAAQ,CAACJ,IAAzF,CAAP;AACH","sourcesContent":["import axios from 'axios';\nimport { retrieveData, TOKENID } from './localStorage';\n\nconst BASE_URL = 'http://localhost:3030';\n\nexport {BASE_URL, login, getRessources, getRessource, updateRessource, createRessource, deleteRessource};\n\nfunction login(data) {\n  const url = `${BASE_URL}/login`;\n  return axios.post(url, data).then((response) => response.data);\n}\n\nfunction getRessources(name) {\n  const url = `${BASE_URL}/${name}`;\n  return axios.get(url).then((response) => response.data);\n}\nfunction getRessource(name, id) {\n  const url = `${BASE_URL}/${name}/${id}`;\n  return axios.get(url).then((response) => response.data);\n}\nfunction updateRessource(name, id, data) {\n    const url = `${BASE_URL}/${name}/${id}`;\n    let token= retrieveData(TOKENID);\n    return axios.put(url, data, { headers: { Authorization: `${token}` }}).then((response) => response.data);\n}\nfunction createRessource(name, data) {\n    const url = `${BASE_URL}/${name}`;\n    let token= retrieveData(TOKENID);\n    return axios.post(url, data, { headers: { Authorization: `${token}` }}).then((response) => response.data);\n}\nfunction deleteRessource(name, id) {\n    const url = `${BASE_URL}/${name}/${id}`;\n    let token= retrieveData(TOKENID);\n    return axios.delete(url, { headers: { Authorization: `${token}` }}).then((response) => response.data);\n}\n\n\n"]},"metadata":{},"sourceType":"module"}