{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoema\\\\blog\\\\front-react\\\\src\\\\pages\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\"; // components\n\nimport BlogCard from \"../component/BlogCard\";\nimport Navbar from \"../component/Navbar\"; // store\n\nimport store from \"../store/configureStore\";\nimport { userActionTypes } from \"../store/constants/usersAction.types\";\nimport usersActionsCreator from \"../store/actions/usersActions.creator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      if (typeof Cookies.get(\"isLoggedIn\") === \"undefined\" && typeof Cookies.get(\"jwt\") === \"undefined\") {\n        this.props.history.push(\"/login\");\n      }\n\n      store.dispatch(usersActionsCreator(userActionTypes.AUTHORIZED));\n    };\n\n    this.state = {\n      blogs: [],\n      loading: false\n    };\n  } //Cookies\n\n\n  render() {\n    if (Cookies.get(\"isLoggedIn\") === \"false\" && !this.props.isLoggedIn) {\n      this.props.history.push(\"/login\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-container\",\n          children: this.props.blogs.map((blog, index) => {\n            return index % 4 === 0 ? /*#__PURE__*/_jsxDEV(Row, {\n              children: this.props.blogs.slice(index, index + 4).map(blog => {\n                return /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"py-2\",\n                  children: [/*#__PURE__*/_jsxDEV(BlogCard, {\n                    blog: blog\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 27\n                  }, this), \";\"]\n                }, blog.blogID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this);\n              })\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.loginReducer.isLoggedIn,\n    blogs: state.blogReducer.blogs\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["C:/Users/zoema/blog/front-react/src/pages/Home.js"],"names":["React","Component","Cookies","Row","Col","connect","BlogCard","Navbar","store","userActionTypes","usersActionsCreator","Home","constructor","componentDidMount","get","props","history","push","dispatch","AUTHORIZED","state","blogs","loading","render","isLoggedIn","map","blog","index","slice","blogID","mapStateToProps","loginReducer","blogReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;;;;AAEA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAC3BW,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,iBARc,GAQM,MAAM;AACxB,UACE,OAAOX,OAAO,CAACY,GAAR,CAAY,YAAZ,CAAP,KAAqC,WAArC,IACA,OAAOZ,OAAO,CAACY,GAAR,CAAY,KAAZ,CAAP,KAA8B,WAFhC,EAGE;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;;AACDT,MAAAA,KAAK,CAACU,QAAN,CAAeR,mBAAmB,CAACD,eAAe,CAACU,UAAjB,CAAlC;AACD,KAhBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID,GAP0B,CAQ3B;;;AAWAC,EAAAA,MAAM,GAAG;AACP,QAAIrB,OAAO,CAACY,GAAR,CAAY,YAAZ,MAA8B,OAA9B,IAAyC,CAAC,KAAKC,KAAL,CAAWS,UAAzD,EAAqE;AACnE,WAAKT,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;;AACD,wBACE;AAAA,gBACG,KAAKG,KAAL,CAAWE,OAAX,gBACC;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,gBAMC;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACG,KAAKP,KAAL,CAAWM,KAAX,CAAiBI,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,mBAAOA,KAAK,GAAG,CAAR,KAAc,CAAd,gBACL,QAAC,GAAD;AAAA,wBACG,KAAKZ,KAAL,CAAWM,KAAX,CAAiBO,KAAjB,CAAuBD,KAAvB,EAA8BA,KAAK,GAAG,CAAtC,EAAyCF,GAAzC,CAA8CC,IAAD,IAAU;AACtD,oCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACE,QAAC,QAAD;AAAU,oBAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,0BADF;AAAA,mBAA2BA,IAAI,CAACG,MAAhC;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD,eANA;AADH,eAAUF,KAAV;AAAA;AAAA;AAAA;AAAA,oBADK,gBAWL,qCAXF;AAaD,WAdA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAtD0B;;AAyD7B,MAAMG,eAAe,GAAIV,KAAD,IAAW;AACjC,SAAO;AACLI,IAAAA,UAAU,EAAEJ,KAAK,CAACW,YAAN,CAAmBP,UAD1B;AAELH,IAAAA,KAAK,EAAED,KAAK,CAACY,WAAN,CAAkBX;AAFpB,GAAP;AAID,CALD;;AAOA,eAAehB,OAAO,CAACyB,eAAD,CAAP,CAAyBnB,IAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// components\r\nimport BlogCard from \"../component/BlogCard\";\r\nimport Navbar from \"../component/Navbar\";\r\n\r\n// store\r\nimport store from \"../store/configureStore\";\r\nimport { userActionTypes } from \"../store/constants/usersAction.types\";\r\nimport usersActionsCreator from \"../store/actions/usersActions.creator\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      blogs: [],\r\n      loading: false,\r\n    };\r\n  }\r\n  //Cookies\r\n  componentDidMount = () => {\r\n    if (\r\n      typeof Cookies.get(\"isLoggedIn\") === \"undefined\" &&\r\n      typeof Cookies.get(\"jwt\") === \"undefined\"\r\n    ) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    store.dispatch(usersActionsCreator(userActionTypes.AUTHORIZED));\r\n  };\r\n\r\n  render() {\r\n    if (Cookies.get(\"isLoggedIn\") === \"false\" && !this.props.isLoggedIn) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.loading ? (\r\n          <>\r\n            <Navbar />\r\n            <div>Loading..</div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Navbar />\r\n            <div className=\"body-container\">\r\n              {this.props.blogs.map((blog, index) => {\r\n                return index % 4 === 0 ? (\r\n                  <Row key={index}>\r\n                    {this.props.blogs.slice(index, index + 4).map((blog) => {\r\n                      return (\r\n                        <Col className=\"py-2\" key={blog.blogID}>\r\n                          <BlogCard blog={blog} />;\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                  </Row>\r\n                ) : (\r\n                  <></>\r\n                );\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.loginReducer.isLoggedIn,\r\n    blogs: state.blogReducer.blogs,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}